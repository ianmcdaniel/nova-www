{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/container.js","webpack:///./src/components/navigation.js","webpack:///./src/components/layout.js","webpack:///./src/components/article-preview.js"],"names":["client","ApolloClient","uri","RootIndex","render","siteTitle","get","this","articles","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","react_apollo__WEBPACK_IMPORTED_MODULE_7__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","props","style","background","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","title","className","map","_ref","node","key","slug","_components_article_preview__WEBPACK_IMPORTED_MODULE_5__","article","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","loader","enqueue","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","container","children","react_default","maxWidth","margin","navigation","role","gatsby_browser_entry","to","Template","_this$props","__PREFIX_PATHS__","__PATH_PREFIX__","gatsby__WEBPACK_IMPORTED_MODULE_1__","gatsby_image__WEBPACK_IMPORTED_MODULE_2__","gatsby_image__WEBPACK_IMPORTED_MODULE_2___default","alt","fluid","thumbnailImage","updatedAt","summary"],"mappings":"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","file":"component---src-pages-index-js-835f59cd6efef80ef068.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\nimport Layout from '../components/layout'\nimport ArticlePreview from '../components/article-preview'\n\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from \"react-apollo\";\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:8002/___graphql'\n});\n\nclass RootIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const articles = get(this, 'props.data.allContentfulArticle.edges')\n\n\n    return (\n\t\t\t<ApolloProvider client={client}>\n\t      <Layout location={this.props.location} >\n\t        <div style={{ background: '#fff' }}>\n\t          <Helmet title={siteTitle} />\n            <div className=\"main-hero\">\n              <h1>Nova Credit creates a world beyond borders</h1>\n              <p>\n                Moving to a new country is hard. On top of that, basic tasks\n                like renting an apartment or getting a credit card can be almost\n                impossible without a US credit history. Nova Credit lets you\n                arrive and thrive.\n              </p>\n              <button>Find Credit Cards</button>\n            </div>\n\t          <div className=\"wrapper\">\n\t            <h2 className=\"section-headline\">Recent Articles</h2>\n\t            <ul className=\"article-list\">\n\t              {articles.map(({ node }) => {\n\t                return (\n\t                  <li key={node.slug}>\n\t                    <ArticlePreview article={node} />\n\t                  </li>\n\t                )\n\t              })}\n\t            </ul>\n\t          </div>\n\t        </div>\n\t      </Layout>\n\t\t\t</ApolloProvider>\n    )\n  }\n}\n\nexport default RootIndex\n\nexport const pageQuery = graphql`\n  query HomeQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allContentfulArticle(sort: { fields: [updatedAt], order: DESC }, limit: 3) {\n      edges {\n        node {\n          slug\n          title\n          summary\n          updatedAt(formatString: \"MMMM Do, YYYY\")\n          thumbnailImage {\n            fluid(maxWidth: 350, maxHeight: 196, resizingBehavior: SCALE) {\n             ...GatsbyContentfulFluid_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n\nexport default ({ children }) => (\n  <div style={{ maxWidth: 1180, margin: '0 auto' }}>{children}</div>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\n\n\nexport default () => (\n  <nav role=\"navigation\">\n    <ul className=\"navigation\">\n      <li className=\"navigationItem\">\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li className=\"navigationItem\">\n        <Link to=\"/resources/\">Resources</Link>\n      </li>\n    </ul>\n  </nav>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport base from './base.css'\nimport Container from './container'\nimport Navigation from './navigation'\n\nclass Template extends React.Component {\n  render() {\n    const { location, children } = this.props\n    let header\n\n    let rootPath = `/`\n    if (typeof __PREFIX_PATHS__ !== `undefined` && __PREFIX_PATHS__) {\n      rootPath = __PATH_PREFIX__ + `/`\n    }\n\n    return (\n      <Container>\n        <Navigation />\n        {children}\n      </Container>\n    )\n  }\n}\n\nexport default Template\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport Img from 'gatsby-image';\n\nexport default ({ article }) => (\n  <div className=\"preview\">\n    <Link to={`/resources/${article.slug}`}>\n      <Img alt=\"\" fluid={article.thumbnailImage.fluid} />\n    </Link>\n    <h3 className=\"previewTitle\">\n      <Link to={`/resources/${article.slug}`}>{article.title}</Link>\n    </h3>\n    <small>{article.updatedAt}</small>\n    <p>{article.summary}</p>\n  </div>\n)\n"],"sourceRoot":""}