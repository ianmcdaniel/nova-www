{"version":3,"sources":["webpack:///./src/templates/article.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/container.js","webpack:///./src/components/navigation.js","webpack:///./src/components/layout.js","webpack:///./src/components/CardCTA.js"],"names":["ArticleTemplate","render","_renderNode","article","get","this","props","siteTitle","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","location","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","className","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","heroStyles","heroImage","alt","fluid","mainImage","updatedAt","documentToReactComponents","body","json","renderNode","BLOCKS","EMBEDDED_ENTRY","node","fields","data","target","cardSlug","_components_CardCTA__WEBPACK_IMPORTED_MODULE_7__","slug","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","loader","enqueue","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","InternalPageRenderer","Object","assign","propTypes","shape","pathname","container","children","react_default","style","maxWidth","margin","navigation","role","styles","navigationItem","gatsby_browser_entry","Template","_this$props","__PREFIX_PATHS__","__PATH_PREFIX__"],"mappings":"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","file":"component---src-templates-article-js-5d6b2dfdd8544985b518.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport get from 'lodash/get'\nimport Img from 'gatsby-image'\nimport { Link } from 'gatsby';\nimport Layout from '../components/layout'\nimport CardCTA from '../components/CardCTA';\n\nimport { BLOCKS } from '@contentful/rich-text-types';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\n\nimport heroStyles from '../components/hero.module.css'\n\nclass ArticleTemplate extends React.Component {\n  render() {\n    const article = get(this.props, 'data.contentfulArticle')\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title')\n\n    return (\n      <Layout location={this.props.location} >\n        <div>\n          <Helmet title={`${article.title} | ${siteTitle}`} />\n\n          <div className=\"main-hero\">\n          <Link to=\"/articles\">‚Üê Back to Resources</Link>\n          <br /><br />\n          <h1 className=\"section-headline\">{article.title}</h1>\n            <Img className={heroStyles.heroImage} alt={article.title} fluid={article.mainImage.fluid} />\n          </div>\n          <div className=\"wrapper\">\n\n            <p>{article.updatedAt}</p>\n\t\t\t\t\t\t<div className=\"article-body\">\n\t\t\t\t\t\t\t{\n                documentToReactComponents(article.body.json, {\n\t\t\t\t\t\t\t\t  renderNode: {\n\t\t\t\t\t\t\t\t    [BLOCKS.EMBEDDED_ENTRY]: (node) => {\n\t\t\t\t\t\t\t\t      const fields = node.data.target.fields;\n\t\t\t\t\t\t\t\t\t\t\tif (fields && fields.cardSlug) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn <CardCTA slug={fields.cardSlug['en-US']} />\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t      return <h1>WTF</h1>;\n\t\t\t\t\t\t\t\t    }\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default ArticleTemplate\n\nexport const pageQuery = graphql`\n  query ArticleBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    contentfulArticle(slug: { eq: $slug }) {\n      title\n      summary\n      updatedAt(formatString: \"MMMM Do, YYYY\")\n      mainImage {\n        fluid(maxWidth: 1180, background: \"rgb:000000\") {\n          ...GatsbyContentfulFluid_tracedSVG\n        }\n      }\n\t\t\tbody {\n\t\t\t\tjson\n\t    }\n\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n\nexport default ({ children }) => (\n  <div style={{ maxWidth: 1180, margin: '0 auto' }}>{children}</div>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styles from './navigation.module.css'\n\nexport default () => (\n  <nav role=\"navigation\">\n    <ul className={styles.navigation}>\n      <li className={styles.navigationItem}>\n        <Link to=\"/\">Home</Link>\n      </li>\n      <li className={styles.navigationItem}>\n        <Link to=\"/articles/\">Resources</Link>\n      </li>\n      <li className={styles.navigationItem}>\n        <Link to=\"/blog/\">Credit Cards</Link>\n      </li>\n    </ul>\n  </nav>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport base from './base.css'\nimport Container from './container'\nimport Navigation from './navigation'\n\nclass Template extends React.Component {\n  render() {\n    const { location, children } = this.props\n    let header\n\n    let rootPath = `/`\n    if (typeof __PREFIX_PATHS__ !== `undefined` && __PREFIX_PATHS__) {\n      rootPath = __PATH_PREFIX__ + `/`\n    }\n\n    return (\n      <Container>\n        <Navigation />\n        {children}\n      </Container>\n    )\n  }\n}\n\nexport default Template\n","import React from 'react'\nimport { Query } from 'react-apollo'\nimport { gql } from 'apollo-boost'\nimport ApolloClient from 'apollo-boost';\n\n// const client = new ApolloClient({\n//   uri: 'http://localhost:8000/___graphql'\n// });\n\n\nexport default ({ slug }) => (\n  <div>CARD CTA</div>\n)\n"],"sourceRoot":""}